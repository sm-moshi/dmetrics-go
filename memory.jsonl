{"type":"entity","name":"dmetrics-go","entityType":"Project","observations":["Go-based system metrics collection library for macOS","Located at /Users/smeya/git/dmetrics-go","Currently implements CPU metrics with cgo bindings"],"createdAt":"2025-03-24T14:38:53.603Z","version":1}
{"type":"entity","name":"cpu_package","entityType":"Package","observations":["Main CPU metrics package","Uses cgo for native system calls","Recently fixed per-core CPU usage tracking","Implements 500ms sampling interval","Supports both Intel and Apple Silicon processors"],"createdAt":"2025-03-24T14:38:53.610Z","version":1}
{"type":"entity","name":"cpu_implementation","entityType":"Component","observations":["Implements CPU metrics collection via cgo","Uses host_processor_info for per-core stats","Thread-safe with mutex protection","Proper memory management with vm_deallocate","Calculates accurate per-core and total CPU usage","Fixed linter warnings in example application","Added proper error wrapping with %w verb","Improved resource cleanup with proper defer handling","Added package-level RNG with nolint directive","Implements multi-stage CPU frequency detection","Handles both Apple Silicon and Intel architectures","Zero frequency is now a valid state with error propagation"],"createdAt":"2025-03-25T16:15:20.247Z","version":2}
{"type":"entity","name":"test_suite","entityType":"Component","observations":["Comprehensive test coverage for CPU metrics","Uses package-level RNG with nolint directive","Implements concurrent testing","Validates per-core and total CPU statistics","Tests both Intel and Apple Silicon specific features"],"createdAt":"2025-03-24T14:38:53.610Z","version":1}
{"type":"entity","name":"recent_changes","entityType":"Changelog","observations":["Fixed per-core CPU usage tracking with host_processor_info","Implemented 500ms sampling interval for accuracy","Added nolint directive for test RNG","Improved memory management with proper vm_deallocate","Enhanced thread safety with mutex protection","Merged PR #6: CPU frequency detection improvements","Enhanced error handling with proper propagation","Added multi-stage frequency detection for different CPU architectures","Improved test coverage and structure","Updated documentation to reflect new error handling patterns"],"createdAt":"2025-03-24T14:39:09.244Z","version":1}
{"type":"entity","name":"documentation","entityType":"Component","observations":["Added root package doc.go with comprehensive library overview","Added cpu/doc.go with detailed CPU metrics documentation","Includes runnable examples and implementation details","Follows Go documentation conventions for pkg.go.dev","Updated error handling documentation for CPU frequency","Added clarification about zero frequency being a valid state","Enhanced British English usage throughout docs","Improved thread safety documentation"],"createdAt":"2025-03-24T15:07:13.720Z","version":1}
{"type":"entity","name":"project_documentation","entityType":"Documentation","observations":["Added comprehensive package documentation in doc.go files","Established clear API documentation with examples","Created detailed CHANGELOG.md following Keep a Changelog format","Added build and release workflow documentation"],"createdAt":"2025-03-24T15:39:26.556Z","version":1}
{"type":"entity","name":"ProjectStructure","entityType":"Architecture","observations":["Root directory structure: api/, internal/, pkg/","api/metrics/ for public interfaces","internal/ for implementation details","pkg/metrics/ for shared types and utilities","Documentation now reflects final package layout: api/metrics, internal/*, pkg/metrics/types","Examples updated to use provider pattern and proper context handling","All documentation consistently shows platform-specific implementations in internal/*"],"createdAt":"2025-03-24T16:05:27.142Z","version":1}
{"type":"entity","name":"CPUPackage","entityType":"Component","observations":["Currently in root/cpu/","Needs to be moved to internal/cpu/","Public interface should be in api/metrics/cpu.go","Types should move to pkg/metrics/types/","Moved types from cpu/types/types.go to pkg/metrics/types/cpu_types.go","Renamed types to be more specific: Stats -> CPUStats, Platform -> CPUPlatform","Updated package documentation","Moved implementation files to internal/cpu/darwin/","Created new Provider struct with interface implementation","Implemented context-aware methods","Added proper error handling and monitoring","Updated import paths to use new package structure","Created factory package in internal/cpu","Fixed interface and implementation alignment","Moved types to pkg/metrics/types","Created new test files in internal/cpu/darwin and internal/cpu","Added comprehensive test coverage for provider and implementation","Removed old CPU package","Updated test cases to use context and new types"],"createdAt":"2025-03-24T16:05:27.144Z","version":1}
{"type":"entity","name":"SystemArchitecture","entityType":"Feature","observations":["Platform detection using runtime package","Darwin-specific system info collection","Platform abstraction layer for future OS support","Implementation timeline: 1-2 days"],"createdAt":"2025-03-24T16:05:27.145Z","version":1}
{"type":"entity","name":"CPUMetrics","entityType":"Feature","observations":["Sysctl wrapper for Darwin","CPU frequency monitoring with goroutines","CPU usage tracking","Context-aware cancellation","Implementation timeline: 2-3 days"],"createdAt":"2025-03-24T16:05:27.145Z","version":1}
{"type":"entity","name":"PowerMetrics","entityType":"Feature","observations":["IOKit bindings for battery status","Power source detection","Battery percentage monitoring","Polling system with cancellation","Implementation timeline: 2-3 days"],"createdAt":"2025-03-24T16:05:27.145Z","version":1}
{"type":"entity","name":"TestingStrategy","entityType":"Process","observations":["Table-driven tests for all packages","Mock interfaces for testing","Integration tests with real syscalls","Race condition detection with go test -race","Implemented table-driven tests for CPU metrics","Added concurrent testing for CPU stats","Included proper error handling tests","Added timeout and cancellation tests"],"createdAt":"2025-03-24T16:05:27.145Z","version":1}
{"type":"entity","name":"Documentation","entityType":"Component","observations":["Initial documentation setup","Updated doc.go with new package structure and provider pattern","Created internal/cpu/darwin/doc.go with platform-specific documentation","Updated README.md to reflect new package organization","Added context usage examples in documentation","Updated import paths in all documentation to use new package structure"],"createdAt":"2025-03-24T16:27:42.562Z","version":1}
{"type":"entity","name":"power_metrics_module","entityType":"Component","observations":["Implements battery and power source monitoring","Thread-safe with mutex protection","Supports real-time monitoring","Includes comprehensive test suite","Darwin-specific implementation using IOKit and SMC"],"createdAt":"2025-03-24T19:34:51.561Z","version":1}
{"type":"entity","name":"cpu_metrics_module","entityType":"Component","observations":["Implements CPU statistics collection","Supports both Intel and Apple Silicon","Includes frequency, usage, and load average metrics","Thread-safe implementation","Currently has a CPU frequency reporting issue"],"createdAt":"2025-03-24T19:34:51.567Z","version":1}
{"type":"entity","name":"project_structure","entityType":"Architecture","observations":["Modular package layout with api/, internal/, and pkg/ directories","Clear separation between public API and internal implementations","Platform-specific code isolated in internal/darwin/","Examples organized by feature in examples/ directory","Documentation centralized in docs/ directory"],"createdAt":"2025-03-24T19:35:06.372Z","version":1}
{"type":"entity","name":"current_status","entityType":"Status","observations":["Power metrics module is ready for commit","CPU module has a frequency reporting issue to be fixed","Documentation is up-to-date","Test coverage is comprehensive","Project structure follows Go best practices"],"createdAt":"2025-03-24T19:35:19.338Z","version":1}
{"type":"entity","name":"v0.1_milestone","entityType":"Milestone","observations":["Power metrics feature complete","Modular package layout implemented","System architecture detection done","CPU metrics partially complete (frequency issue pending)","Ready for version tagging"],"createdAt":"2025-03-24T19:37:15.662Z","version":1}
{"type":"entity","name":"v0.1_blockers","entityType":"Issues","observations":["CPU frequency reporting returns 0","Integration tests incomplete","Documentation needs finalization","Example code needs updates","CPU metrics tests need improvement"],"createdAt":"2025-03-24T19:39:51.735Z","version":1}
{"type":"entity","name":"code_quality_improvements","entityType":"milestone","observations":["Fixed long test function by splitting TestNewProvider into separate focused tests","Removed unused RNG and mutex from power implementation tests","Fixed init function usage in both CPU and Power providers","All linter issues resolved with golangci-lint passing clean","Improved context handling in both CPU and Power providers"],"createdAt":"2025-03-24T20:01:02.504Z","version":1}
{"type":"entity","name":"test_improvements","entityType":"status","observations":["CPU provider tests are now well-structured and focused","Power implementation tests are cleaner and more maintainable","Test coverage improved with better organization","Integration tests for concurrent access implemented","Tests now properly handle context cancellation"],"createdAt":"2025-03-24T20:01:02.506Z","version":1}
{"type":"entity","name":"linting_configuration","entityType":"configuration","observations":["Using golangci-lint v2.0.0 with version: '2' in config","Configured with 37 linters including advanced checks like gocognit and cyclop","Custom settings for complexity metrics (cyclop: max-complexity 30, gocognit: min-complexity 20)","Build tags configured for darwin and integration tests","Strict configuration for naked returns (max-func-lines: 1) and cognitive complexity"],"createdAt":"2025-03-24T22:46:19.037Z","version":1}
{"type":"entity","name":"test_complexity_issue","entityType":"issue","observations":["TestPowerMetricsIntegration in internal/power/darwin/integration_test.go exceeds cognitive complexity threshold","Current cognitive complexity: 23 (threshold: 20)","Located in the power metrics integration test suite","Needs refactoring to reduce complexity"],"createdAt":"2025-03-24T22:46:19.051Z","version":1}
{"type":"entity","name":"project_status","entityType":"status","observations":["Successfully migrated to golangci-lint v2 configuration","Integration tests implemented but showing complexity issues","Using Go 1.24.1 as specified in linter configuration","Power metrics implementation includes Darwin-specific code","Active development focusing on code quality and testing"],"createdAt":"2025-03-24T22:46:19.051Z","version":1}
{"type":"entity","name":"DMetricsCodebase","entityType":"Project","observations":["Good foundation with clear package structure","Follows Go project layout conventions","Needs improvements in concurrency, error handling, and testing"],"createdAt":"2025-03-24T22:53:46.566Z","version":1}
{"type":"entity","name":"CurrentState","entityType":"Status","observations":["Has basic documentation and package structure","Missing concurrency patterns","Missing comprehensive test suite","Basic error handling without custom types"],"createdAt":"2025-03-24T22:53:46.568Z","version":1}
{"type":"entity","name":"HighPriorityTasks","entityType":"TaskGroup","observations":["Implement context support in metric collection","Add comprehensive test suite with race condition testing","Create custom error types for metric failures"],"createdAt":"2025-03-24T22:53:46.568Z","version":1}
{"type":"entity","name":"MediumPriorityTasks","entityType":"TaskGroup","observations":["Enhance documentation with concurrency details","Add interfaces for metric collectors","Implement resource cleanup mechanisms"],"createdAt":"2025-03-24T22:53:46.568Z","version":1}
{"type":"entity","name":"LowPriorityTasks","entityType":"TaskGroup","observations":["Add more example implementations","Include benchmarks","Document platform-specific limitations"],"createdAt":"2025-03-24T22:53:46.568Z","version":1}
{"type":"entity","name":"v0.1_cpu_frequency","entityType":"feature","observations":["Part of v0.1 release scope","Must work without root/sudo privileges","Needs to handle both Intel and Apple Silicon","Should provide basic frequency information with confidence levels","Focus on minimal viable implementation"],"createdAt":"2025-03-25T15:36:13.294Z","version":1}
{"type":"entity","name":"current_implementation","entityType":"code_state","observations":["Has hardcoded fallback value of 3200 MHz","Uses sysctl keys without proper error handling","Doesn't distinguish between Intel and Apple Silicon","No confidence levels or measurement accuracy indicators"],"createdAt":"2025-03-25T15:36:13.302Z","version":1}
{"type":"entity","name":"v0.1_constraints","entityType":"requirements","observations":["Keep changes minimal and focused","Avoid feature creep beyond v0.1 scope","Maintain zero-privilege requirement","Focus on basic functionality first"],"createdAt":"2025-03-25T15:36:13.302Z","version":1}
{"type":"entity","name":"v0.1_next_steps","entityType":"action_plan","observations":["1. Remove hardcoded fallback value","2. Add basic platform detection (Intel vs Apple Silicon)","3. Implement proper error handling for sysctl calls","4. Add simple confidence indicator (HIGH if sysctl succeeds, LOW if estimation needed)","5. Keep existing CPUStats struct for now - avoid scope creep","6. Add basic unit tests for changes"],"createdAt":"2025-03-25T15:36:28.253Z","version":1}
{"type":"entity","name":"dmetrics-go","entityType":"Project","observations":["Go-based system metrics collection library for macOS","Located at /Users/smeya/git/dmetrics-go","Currently implements CPU metrics with cgo bindings"],"createdAt":"2025-03-24T14:38:53.603Z","version":1}
{"type":"entity","name":"cpu_package","entityType":"Package","observations":["Main CPU metrics package","Uses cgo for native system calls","Recently fixed per-core CPU usage tracking","Implements 500ms sampling interval","Supports both Intel and Apple Silicon processors"],"createdAt":"2025-03-24T14:38:53.610Z","version":1}
{"type":"entity","name":"cpu_implementation","entityType":"Component","observations":["Implements CPU metrics collection via cgo","Uses host_processor_info for per-core stats","Thread-safe with mutex protection","Proper memory management with vm_deallocate","Calculates accurate per-core and total CPU usage","Fixed linter warnings in example application","Added proper error wrapping with %w verb","Improved resource cleanup with proper defer handling","Added package-level RNG with nolint directive"],"createdAt":"2025-03-24T14:38:53.610Z","version":1}
{"type":"entity","name":"test_suite","entityType":"Component","observations":["Comprehensive test coverage for CPU metrics","Uses package-level RNG with nolint directive","Implements concurrent testing","Validates per-core and total CPU statistics","Tests both Intel and Apple Silicon specific features"],"createdAt":"2025-03-24T14:38:53.610Z","version":1}
{"type":"entity","name":"recent_changes","entityType":"Changelog","observations":["Fixed per-core CPU usage tracking with host_processor_info","Implemented 500ms sampling interval for accuracy","Added nolint directive for test RNG","Improved memory management with proper vm_deallocate","Enhanced thread safety with mutex protection"],"createdAt":"2025-03-24T14:39:09.244Z","version":1}
{"type":"entity","name":"documentation","entityType":"Component","observations":["Added root package doc.go with comprehensive library overview","Added cpu/doc.go with detailed CPU metrics documentation","Includes runnable examples and implementation details","Follows Go documentation conventions for pkg.go.dev"],"createdAt":"2025-03-24T15:07:13.720Z","version":1}
{"type":"entity","name":"project_documentation","entityType":"Documentation","observations":["Added comprehensive package documentation in doc.go files","Established clear API documentation with examples","Created detailed CHANGELOG.md following Keep a Changelog format","Added build and release workflow documentation"],"createdAt":"2025-03-24T15:39:26.556Z","version":1}
{"type":"entity","name":"ProjectStructure","entityType":"Architecture","observations":["Root directory structure: api/, internal/, pkg/","api/metrics/ for public interfaces","internal/ for implementation details","pkg/metrics/ for shared types and utilities","Documentation now reflects final package layout: api/metrics, internal/*, pkg/metrics/types","Examples updated to use provider pattern and proper context handling","All documentation consistently shows platform-specific implementations in internal/*"],"createdAt":"2025-03-24T16:05:27.142Z","version":1}
{"type":"entity","name":"CPUPackage","entityType":"Component","observations":["Currently in root/cpu/","Needs to be moved to internal/cpu/","Public interface should be in api/metrics/cpu.go","Types should move to pkg/metrics/types/","Moved types from cpu/types/types.go to pkg/metrics/types/cpu_types.go","Renamed types to be more specific: Stats -> CPUStats, Platform -> CPUPlatform","Updated package documentation","Moved implementation files to internal/cpu/darwin/","Created new Provider struct with interface implementation","Implemented context-aware methods","Added proper error handling and monitoring","Updated import paths to use new package structure","Created factory package in internal/cpu","Fixed interface and implementation alignment","Moved types to pkg/metrics/types","Created new test files in internal/cpu/darwin and internal/cpu","Added comprehensive test coverage for provider and implementation","Removed old CPU package","Updated test cases to use context and new types"],"createdAt":"2025-03-24T16:05:27.144Z","version":1}
{"type":"entity","name":"SystemArchitecture","entityType":"Feature","observations":["Platform detection using runtime package","Darwin-specific system info collection","Platform abstraction layer for future OS support","Implementation timeline: 1-2 days"],"createdAt":"2025-03-24T16:05:27.145Z","version":1}
{"type":"entity","name":"CPUMetrics","entityType":"Feature","observations":["Sysctl wrapper for Darwin","CPU frequency monitoring with goroutines","CPU usage tracking","Context-aware cancellation","Implementation timeline: 2-3 days"],"createdAt":"2025-03-24T16:05:27.145Z","version":1}
{"type":"entity","name":"PowerMetrics","entityType":"Feature","observations":["IOKit bindings for battery status","Power source detection","Battery percentage monitoring","Polling system with cancellation","Implementation timeline: 2-3 days"],"createdAt":"2025-03-24T16:05:27.145Z","version":1}
{"type":"entity","name":"TestingStrategy","entityType":"Process","observations":["Table-driven tests for all packages","Mock interfaces for testing","Integration tests with real syscalls","Race condition detection with go test -race","Implemented table-driven tests for CPU metrics","Added concurrent testing for CPU stats","Included proper error handling tests","Added timeout and cancellation tests"],"createdAt":"2025-03-24T16:05:27.145Z","version":1}
{"type":"entity","name":"Documentation","entityType":"Component","observations":["Initial documentation setup","Updated doc.go with new package structure and provider pattern","Created internal/cpu/darwin/doc.go with platform-specific documentation","Updated README.md to reflect new package organization","Added context usage examples in documentation","Updated import paths in all documentation to use new package structure"],"createdAt":"2025-03-24T16:27:42.562Z","version":1}
{"type":"entity","name":"PowerMetricsTask","entityType":"Task","observations":["Next task after CPU modular layout","Requires IOKit bindings for battery status","Should follow same modular pattern as CPU metrics","Planned structure: api/metrics/power.go, pkg/metrics/types/power_types.go, internal/power/*"],"createdAt":"2025-03-24T16:40:29.646Z","version":1}
{"type":"entity","name":"CPUFrequencyImprovements","entityType":"Feature","observations":["Removed hardcoded frequency fallback value","Implemented proper error propagation from low-level calls","Added multi-stage frequency detection strategy","Handles both Apple Silicon and Intel architectures","Zero frequency is now a valid state with error propagation","Updated tests to handle frequency detection failures"],"createdAt":"2025-03-25T16:14:59.153Z","version":1}
{"type":"entity","name":"ErrorHandlingImprovements","entityType":"Feature","observations":["Enhanced error propagation throughout CPU package","Added context-aware error handling","Improved thread safety with proper mutex usage","Better cleanup of C resources","More descriptive error messages","Graceful handling of frequency detection failures"],"createdAt":"2025-03-25T16:14:59.156Z","version":1}
{"type":"entity","name":"TestingEnhancements","entityType":"Component","observations":["Added TestFrequencyFallback with success/error cases","Updated provider tests to handle zero frequency","Enhanced assertions for CPU stats validation","Improved test structure and readability","Added concurrent testing scenarios","Better logging in test failures"],"createdAt":"2025-03-25T16:14:59.156Z","version":1}
{"type":"entity","name":"NoSudoRequirement","entityType":"Requirement","observations":["End users should never need root/sudo privileges to use the library","All metrics should be accessible without elevated permissions","SMC access should gracefully handle permission limitations","Tests should pass without sudo, with appropriate skips where needed"],"createdAt":"2025-03-25T16:19:27.414Z","version":1}
{"type":"entity","name":"SMCImplementation","entityType":"Component","observations":["Requires RAII pattern with __attribute__((cleanup))","Must handle permissions gracefully without sudo","Needs thread-safe operations with os_unfair_lock","Should support fallback mode for limited permissions","Must follow British English standards in documentation"],"createdAt":"2025-03-25T16:28:46.877Z","version":1}
{"type":"entity","name":"ImplementationFiles","entityType":"FileSet","observations":["power.h: New structures and function signatures","power.c: Core SMC initialization and error handling","impl.go: Go bindings and error propagation","impl_test.go: Comprehensive test coverage","doc.go: Updated documentation in British English"],"createdAt":"2025-03-25T16:28:46.880Z","version":1}
{"type":"entity","name":"SMC_Initialization_Improvements","entityType":"Feature","observations":["Working on feature/smc-init-improvements branch","Added SMC connection cleanup functionality","Implemented thread-safe cleanup with lock handling","Added proper error state management","Following RAII patterns for resource management"],"createdAt":"2025-03-25T16:46:40.027Z","version":1}
{"type":"entity","name":"power.h","entityType":"File","observations":["Contains SMC connection and error handling structures","Added cleanup_smc_connection function declaration","Includes thread-safe operation support","Uses os_unfair_lock for synchronization"],"createdAt":"2025-03-25T16:46:40.030Z","version":1}
{"type":"entity","name":"power.c","entityType":"File","observations":["Implements SMC connection management","Added cleanup_smc_connection implementation","Uses thread-safe operations with locks","Handles SMC key reading and value decoding"],"createdAt":"2025-03-25T16:46:40.030Z","version":1}
{"type":"entity","name":"FPC4_Format","entityType":"DataFormat","observations":["12-bit integer part","4-bit fraction part","Total 16 bits","Example: 15.125 = 0x0F02 (15 + 2/16)","Successfully fixed implementation","Uses data[0] as integer part","Uses data[1] & 0xF for fraction part","Divides fraction by 16.0f","Test now passes with value 15.125"],"createdAt":"2025-03-25T17:36:29.061Z","version":1}
{"type":"entity","name":"Current_Implementation","entityType":"CodeImplementation","observations":["Located in decode_smc_float function","Current implementation may have byte order issues","Needs to properly handle 12-bit integer and 4-bit fraction parts"],"createdAt":"2025-03-25T17:36:29.072Z","version":1}
{"type":"entity","name":"Test_Case","entityType":"TestCase","observations":["Test value: 15.125","Expected hex: 0x0F02","First byte: 0x0F (15)","Second byte: 0x02 (2/16 = 0.125)"],"createdAt":"2025-03-25T17:36:29.072Z","version":1}
{"type":"entity","name":"FPE2_Format","entityType":"DataFormat","observations":["14-bit integer part","2-bit fraction part","Total 16 bits","Test expects 20.25 but getting 1280.250000"],"createdAt":"2025-03-25T17:42:32.472Z","version":1}
{"type":"entity","name":"power_stats_t","entityType":"struct","observations":["Basic C structure for power information","Contains is_present, is_charging, percentage fields","Used for C-Go data transfer"],"createdAt":"2025-03-25T19:14:33.039Z","version":1}
{"type":"entity","name":"PowerStats","entityType":"struct","observations":["Go structure mirroring power_stats_t","Provides clean Go API for power information","Used in public interface"],"createdAt":"2025-03-25T19:14:33.041Z","version":1}
{"type":"entity","name":"get_power_source_info","entityType":"function","observations":["C function using IOPowerSources API","Returns basic power information","No thread synchronization needed"],"createdAt":"2025-03-25T19:14:33.041Z","version":1}
{"type":"entity","name":"getStats","entityType":"function","observations":["Go wrapper for get_power_source_info","Handles error cases and type conversion","Returns PowerStats struct"],"createdAt":"2025-03-25T19:14:33.041Z","version":1}
{"type":"entity","name":"PowerSourceImplementation","entityType":"Feature","observations":["Implemented basic power source monitoring using IOPowerSources API","Removed SMC dependency for v0.1","Added comprehensive documentation","Implemented thread-safe access","Added proper context handling","Added test coverage"],"createdAt":"2025-03-25T19:31:08.174Z","version":1}
{"type":"entity","name":"PowerMetricsV0.1","entityType":"Project","observations":["Simplified implementation using IOPowerSources API","Removed SMC dependency for better stability","Core functionality includes power source presence, charging state, and percentage","Thread-safe implementation with proper context handling","Comprehensive test coverage added","Documentation in British English completed","Ready for PR to develop branch"],"createdAt":"2025-03-25T19:43:16.913Z","version":1}
{"type":"entity","name":"TestSuite","entityType":"Tests","observations":["All unit tests passing","Thread safety tests implemented","Context cancellation tests added","Error handling tests completed"],"createdAt":"2025-03-25T19:43:16.915Z","version":1}
{"type":"entity","name":"FutureWork","entityType":"Roadmap","observations":["SMC-based metrics planned for v0.2","Cycle count monitoring deferred to v0.2","Detailed power consumption metrics planned for v0.2","Battery health monitoring scheduled for v0.2"],"createdAt":"2025-03-25T19:43:16.915Z","version":1}
{"type":"entity","name":"CPU_Metrics","entityType":"Component","observations":["Provides CPU statistics and monitoring","Supports frequency, usage, and core count metrics","Needs Apple Silicon-specific features","Currently has some linter errors in impl.go"],"createdAt":"2025-03-25T20:33:53.701Z","version":1}
{"type":"entity","name":"Power_Metrics","entityType":"Component","observations":["Provides power and battery statistics","Supports power source detection","Needs better error handling for battery absence","Requires cleanup of unimplemented methods"],"createdAt":"2025-03-25T20:33:53.703Z","version":1}
{"type":"entity","name":"CPU Package","entityType":"Package","observations":["Located in internal/cpu and api/metrics","Provides CPU metrics collection for macOS","Supports both Intel and Apple Silicon"],"createdAt":"2025-03-25T20:40:10.137Z","version":1}
{"type":"entity","name":"CPU API","entityType":"Interface","observations":["Defined in api/metrics/cpu.go","Contains CPUMetrics interface","Has redundant CPUStats struct","Needs better error documentation"],"createdAt":"2025-03-25T20:40:10.140Z","version":1}
{"type":"entity","name":"CPU Implementation","entityType":"Implementation","observations":["Located in internal/cpu/darwin/impl.go","Uses cgo for native API calls","Handles platform-specific features","Needs thread-safety improvements"],"createdAt":"2025-03-25T20:40:10.140Z","version":1}
{"type":"entity","name":"CPU Types","entityType":"Types","observations":["Defined in pkg/metrics/types","Contains CPUStats and CPUPlatform structs","Well-documented fields","Supports Apple Silicon specific fields"],"createdAt":"2025-03-25T20:40:10.140Z","version":1}
{"type":"entity","name":"CPU_Package_v0.1_Plan","entityType":"Plan","observations":["Phase 1: Core Functionality - Define missing functions, add error types, verify implementations","Phase 2: API & Safety - Clean Provider struct, add context support, improve resource management","Phase 3: Performance - Optimize channels, add buffering, improve error handling","Phase 4: Documentation & Testing - Complete docs, add examples and tests"],"createdAt":"2025-03-25T21:45:49.063Z","version":1}
{"type":"entity","name":"Phase1_Tasks","entityType":"TaskList","observations":["Define missing functions: initCleanup, cleanup, usage","Add error types and handling","Verify getStats and getFrequency implementations","Files to check: cpu.go, impl.go, cpu.c, cpu.h","✅ Found all missing functions in impl.go","✅ Error types and handling defined in impl.go","✅ All C function declarations present in cpu.h","✅ getStats and getFrequency implementations verified"],"createdAt":"2025-03-25T21:45:49.065Z","version":1}
{"type":"entity","name":"CPU_Package","entityType":"Component","observations":["Core package for CPU metrics collection","Implements thread-safe concurrent access","Uses context for cancellation","Fixed per-core CPU utilisation calculation","Known issue: CPU frequency detection returns 0","Performance: ~500ms initial collection, ~1-2ms subsequent calls","Memory utilisation: ~4KB per core"],"createdAt":"2025-03-25T22:28:27.659Z","version":1}
{"type":"entity","name":"Testing","entityType":"Component","observations":["Unit tests implemented","Race detector enabled and passing","Some integration tests need complexity optimisation","Test coverage for core functionality"],"createdAt":"2025-03-25T22:28:27.662Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"cpu_package","relationType":"contains","createdAt":"2025-03-24T14:39:01.275Z","version":1}
{"type":"relation","from":"cpu_package","to":"cpu_implementation","relationType":"implements","createdAt":"2025-03-24T14:39:01.275Z","version":1}
{"type":"relation","from":"cpu_package","to":"test_suite","relationType":"verified by","createdAt":"2025-03-24T14:39:01.275Z","version":1}
{"type":"relation","from":"cpu_implementation","to":"test_suite","relationType":"tested by","createdAt":"2025-03-24T14:39:01.275Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"recent_changes","relationType":"tracks","createdAt":"2025-03-24T14:39:16.118Z","version":1}
{"type":"relation","from":"recent_changes","to":"cpu_implementation","relationType":"modifies","createdAt":"2025-03-24T14:39:16.118Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"documentation","relationType":"contains","createdAt":"2025-03-24T15:07:19.416Z","version":1}
{"type":"relation","from":"documentation","to":"cpu_package","relationType":"documents","createdAt":"2025-03-24T15:07:19.416Z","version":1}
{"type":"relation","from":"project_documentation","to":"cpu_implementation","relationType":"documents","createdAt":"2025-03-24T15:39:32.199Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"project_documentation","relationType":"contains","createdAt":"2025-03-24T15:39:32.199Z","version":1}
{"type":"relation","from":"ProjectStructure","to":"CPUPackage","relationType":"contains","createdAt":"2025-03-24T16:05:36.886Z","version":1}
{"type":"relation","from":"CPUPackage","to":"CPUMetrics","relationType":"implements","createdAt":"2025-03-24T16:05:36.886Z","version":1}
{"type":"relation","from":"TestingStrategy","to":"CPUMetrics","relationType":"validates","createdAt":"2025-03-24T16:05:36.886Z","version":1}
{"type":"relation","from":"TestingStrategy","to":"PowerMetrics","relationType":"validates","createdAt":"2025-03-24T16:05:36.886Z","version":1}
{"type":"relation","from":"TestingStrategy","to":"SystemArchitecture","relationType":"validates","createdAt":"2025-03-24T16:05:36.886Z","version":1}
{"type":"relation","from":"ProjectStructure","to":"SystemArchitecture","relationType":"supports","createdAt":"2025-03-24T16:05:36.886Z","version":1}
{"type":"relation","from":"ProjectStructure","to":"PowerMetrics","relationType":"supports","createdAt":"2025-03-24T16:05:36.886Z","version":1}
{"type":"relation","from":"Documentation","to":"ProjectStructure","relationType":"describes","createdAt":"2025-03-24T16:27:55.106Z","version":1}
{"type":"relation","from":"ProjectStructure","to":"Documentation","relationType":"guides","createdAt":"2025-03-24T16:27:55.106Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"power_metrics_module","relationType":"contains","createdAt":"2025-03-24T19:34:58.196Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"cpu_metrics_module","relationType":"contains","createdAt":"2025-03-24T19:34:58.196Z","version":1}
{"type":"relation","from":"power_metrics_module","to":"project_documentation","relationType":"documented in","createdAt":"2025-03-24T19:34:58.196Z","version":1}
{"type":"relation","from":"cpu_metrics_module","to":"project_documentation","relationType":"documented in","createdAt":"2025-03-24T19:34:58.196Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"project_structure","relationType":"follows","createdAt":"2025-03-24T19:35:12.681Z","version":1}
{"type":"relation","from":"project_structure","to":"power_metrics_module","relationType":"organizes","createdAt":"2025-03-24T19:35:12.681Z","version":1}
{"type":"relation","from":"project_structure","to":"cpu_metrics_module","relationType":"organizes","createdAt":"2025-03-24T19:35:12.681Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"current_status","relationType":"has","createdAt":"2025-03-24T19:35:25.511Z","version":1}
{"type":"relation","from":"current_status","to":"power_metrics_module","relationType":"indicates ready","createdAt":"2025-03-24T19:35:25.513Z","version":1}
{"type":"relation","from":"current_status","to":"cpu_metrics_module","relationType":"indicates needs work","createdAt":"2025-03-24T19:35:25.513Z","version":1}
{"type":"relation","from":"power_metrics_module","to":"v0.1_milestone","relationType":"completes requirement","createdAt":"2025-03-24T19:37:22.037Z","version":1}
{"type":"relation","from":"project_structure","to":"v0.1_milestone","relationType":"completes requirement","createdAt":"2025-03-24T19:37:22.037Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"v0.1_milestone","relationType":"approaching","createdAt":"2025-03-24T19:37:22.037Z","version":1}
{"type":"relation","from":"v0.1_blockers","to":"v0.1_milestone","relationType":"blocks","createdAt":"2025-03-24T19:39:57.897Z","version":1}
{"type":"relation","from":"cpu_metrics_module","to":"v0.1_blockers","relationType":"primary blocker","createdAt":"2025-03-24T19:39:57.897Z","version":1}
{"type":"relation","from":"code_quality_improvements","to":"test_improvements","relationType":"enables","createdAt":"2025-03-24T20:01:09.567Z","version":1}
{"type":"relation","from":"test_improvements","to":"TODO.md","relationType":"updates","createdAt":"2025-03-24T20:01:09.567Z","version":1}
{"type":"relation","from":"linting_configuration","to":"test_complexity_issue","relationType":"identifies","createdAt":"2025-03-24T22:46:25.356Z","version":1}
{"type":"relation","from":"test_complexity_issue","to":"project_status","relationType":"affects","createdAt":"2025-03-24T22:46:25.356Z","version":1}
{"type":"relation","from":"linting_configuration","to":"project_status","relationType":"guides","createdAt":"2025-03-24T22:46:25.356Z","version":1}
{"type":"relation","from":"DMetricsCodebase","to":"CurrentState","relationType":"has current state","createdAt":"2025-03-24T22:53:54.255Z","version":1}
{"type":"relation","from":"DMetricsCodebase","to":"HighPriorityTasks","relationType":"needs","createdAt":"2025-03-24T22:53:54.255Z","version":1}
{"type":"relation","from":"DMetricsCodebase","to":"MediumPriorityTasks","relationType":"should implement","createdAt":"2025-03-24T22:53:54.255Z","version":1}
{"type":"relation","from":"DMetricsCodebase","to":"LowPriorityTasks","relationType":"could improve with","createdAt":"2025-03-24T22:53:54.255Z","version":1}
{"type":"relation","from":"HighPriorityTasks","to":"MediumPriorityTasks","relationType":"precedes","createdAt":"2025-03-24T22:53:54.255Z","version":1}
{"type":"relation","from":"MediumPriorityTasks","to":"LowPriorityTasks","relationType":"precedes","createdAt":"2025-03-24T22:53:54.255Z","version":1}
{"type":"relation","from":"v0.1_cpu_frequency","to":"current_implementation","relationType":"needs improvement from","createdAt":"2025-03-25T15:36:20.832Z","version":1}
{"type":"relation","from":"v0.1_constraints","to":"v0.1_cpu_frequency","relationType":"governs scope of","createdAt":"2025-03-25T15:36:20.832Z","version":1}
{"type":"relation","from":"v0.1_next_steps","to":"v0.1_constraints","relationType":"aligns with","createdAt":"2025-03-25T15:36:33.932Z","version":1}
{"type":"relation","from":"v0.1_next_steps","to":"v0.1_cpu_frequency","relationType":"implements","createdAt":"2025-03-25T15:36:33.932Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"cpu_package","relationType":"contains","createdAt":"2025-03-24T14:39:01.275Z","version":1}
{"type":"relation","from":"cpu_package","to":"cpu_implementation","relationType":"implements","createdAt":"2025-03-24T14:39:01.275Z","version":1}
{"type":"relation","from":"cpu_package","to":"test_suite","relationType":"verified by","createdAt":"2025-03-24T14:39:01.275Z","version":1}
{"type":"relation","from":"cpu_implementation","to":"test_suite","relationType":"tested by","createdAt":"2025-03-24T14:39:01.275Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"recent_changes","relationType":"tracks","createdAt":"2025-03-24T14:39:16.118Z","version":1}
{"type":"relation","from":"recent_changes","to":"cpu_implementation","relationType":"modifies","createdAt":"2025-03-24T14:39:16.118Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"documentation","relationType":"contains","createdAt":"2025-03-24T15:07:19.416Z","version":1}
{"type":"relation","from":"documentation","to":"cpu_package","relationType":"documents","createdAt":"2025-03-24T15:07:19.416Z","version":1}
{"type":"relation","from":"project_documentation","to":"cpu_implementation","relationType":"documents","createdAt":"2025-03-24T15:39:32.199Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"project_documentation","relationType":"contains","createdAt":"2025-03-24T15:39:32.199Z","version":1}
{"type":"relation","from":"ProjectStructure","to":"CPUPackage","relationType":"contains","createdAt":"2025-03-24T16:05:36.886Z","version":1}
{"type":"relation","from":"CPUPackage","to":"CPUMetrics","relationType":"implements","createdAt":"2025-03-24T16:05:36.886Z","version":1}
{"type":"relation","from":"TestingStrategy","to":"CPUMetrics","relationType":"validates","createdAt":"2025-03-24T16:05:36.886Z","version":1}
{"type":"relation","from":"TestingStrategy","to":"PowerMetrics","relationType":"validates","createdAt":"2025-03-24T16:05:36.886Z","version":1}
{"type":"relation","from":"TestingStrategy","to":"SystemArchitecture","relationType":"validates","createdAt":"2025-03-24T16:05:36.886Z","version":1}
{"type":"relation","from":"ProjectStructure","to":"SystemArchitecture","relationType":"supports","createdAt":"2025-03-24T16:05:36.886Z","version":1}
{"type":"relation","from":"ProjectStructure","to":"PowerMetrics","relationType":"supports","createdAt":"2025-03-24T16:05:36.886Z","version":1}
{"type":"relation","from":"Documentation","to":"ProjectStructure","relationType":"describes","createdAt":"2025-03-24T16:27:55.106Z","version":1}
{"type":"relation","from":"ProjectStructure","to":"Documentation","relationType":"guides","createdAt":"2025-03-24T16:27:55.106Z","version":1}
{"type":"relation","from":"CPUFrequencyImprovements","to":"cpu_implementation","relationType":"enhances","createdAt":"2025-03-25T16:15:06.866Z","version":1}
{"type":"relation","from":"ErrorHandlingImprovements","to":"cpu_implementation","relationType":"improves","createdAt":"2025-03-25T16:15:06.866Z","version":1}
{"type":"relation","from":"TestingEnhancements","to":"test_suite","relationType":"extends","createdAt":"2025-03-25T16:15:06.866Z","version":1}
{"type":"relation","from":"recent_changes","to":"CPUFrequencyImprovements","relationType":"includes","createdAt":"2025-03-25T16:15:06.866Z","version":1}
{"type":"relation","from":"recent_changes","to":"ErrorHandlingImprovements","relationType":"includes","createdAt":"2025-03-25T16:15:06.866Z","version":1}
{"type":"relation","from":"recent_changes","to":"TestingEnhancements","relationType":"includes","createdAt":"2025-03-25T16:15:06.866Z","version":1}
{"type":"relation","from":"NoSudoRequirement","to":"SystemArchitecture","relationType":"constrains","createdAt":"2025-03-25T16:19:35.320Z","version":1}
{"type":"relation","from":"NoSudoRequirement","to":"TestingStrategy","relationType":"influences","createdAt":"2025-03-25T16:19:35.320Z","version":1}
{"type":"relation","from":"PowerMetricsTask","to":"SMCImplementation","relationType":"requires","createdAt":"2025-03-25T16:28:51.793Z","version":1}
{"type":"relation","from":"SMCImplementation","to":"ImplementationFiles","relationType":"implements","createdAt":"2025-03-25T16:28:51.793Z","version":1}
{"type":"relation","from":"SMC_Initialization_Improvements","to":"power.h","relationType":"modifies","createdAt":"2025-03-25T16:46:47.455Z","version":1}
{"type":"relation","from":"SMC_Initialization_Improvements","to":"power.c","relationType":"modifies","createdAt":"2025-03-25T16:46:47.455Z","version":1}
{"type":"relation","from":"power.h","to":"power.c","relationType":"defines_interface_for","createdAt":"2025-03-25T16:46:47.455Z","version":1}
{"type":"relation","from":"FPC4_Format","to":"Current_Implementation","relationType":"defines requirements for","createdAt":"2025-03-25T17:36:34.369Z","version":1}
{"type":"relation","from":"Test_Case","to":"Current_Implementation","relationType":"validates","createdAt":"2025-03-25T17:36:34.369Z","version":1}
{"type":"relation","from":"FPC4_Format","to":"Test_Case","relationType":"specifies format for","createdAt":"2025-03-25T17:36:34.369Z","version":1}
{"type":"relation","from":"getStats","to":"get_power_source_info","relationType":"calls","createdAt":"2025-03-25T19:14:36.459Z","version":1}
{"type":"relation","from":"getStats","to":"PowerStats","relationType":"returns","createdAt":"2025-03-25T19:14:36.459Z","version":1}
{"type":"relation","from":"get_power_source_info","to":"power_stats_t","relationType":"uses","createdAt":"2025-03-25T19:14:36.459Z","version":1}
{"type":"relation","from":"PowerStats","to":"power_stats_t","relationType":"mirrors","createdAt":"2025-03-25T19:14:36.459Z","version":1}
{"type":"relation","from":"PowerMetricsV0.1","to":"PowerStats","relationType":"implements","createdAt":"2025-03-25T19:43:25.193Z","version":1}
{"type":"relation","from":"PowerMetricsV0.1","to":"Documentation","relationType":"includes","createdAt":"2025-03-25T19:43:25.193Z","version":1}
{"type":"relation","from":"PowerMetricsV0.1","to":"TestSuite","relationType":"verifiedBy","createdAt":"2025-03-25T19:43:25.193Z","version":1}
{"type":"relation","from":"PowerMetricsV0.1","to":"FutureWork","relationType":"plansFuture","createdAt":"2025-03-25T19:43:25.193Z","version":1}
{"type":"relation","from":"Documentation","to":"FutureWork","relationType":"describes","createdAt":"2025-03-25T19:43:25.193Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"CPU_Metrics","relationType":"contains","createdAt":"2025-03-25T20:33:56.236Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"Power_Metrics","relationType":"contains","createdAt":"2025-03-25T20:33:56.236Z","version":1}
{"type":"relation","from":"CPU Package","to":"CPU API","relationType":"contains","createdAt":"2025-03-25T20:40:16.889Z","version":1}
{"type":"relation","from":"CPU Package","to":"CPU Implementation","relationType":"contains","createdAt":"2025-03-25T20:40:16.889Z","version":1}
{"type":"relation","from":"CPU Package","to":"CPU Types","relationType":"uses","createdAt":"2025-03-25T20:40:16.889Z","version":1}
{"type":"relation","from":"CPU API","to":"CPU Types","relationType":"depends on","createdAt":"2025-03-25T20:40:16.889Z","version":1}
{"type":"relation","from":"CPU Implementation","to":"CPU Types","relationType":"implements","createdAt":"2025-03-25T20:40:16.889Z","version":1}
{"type":"relation","from":"CPU Implementation","to":"CPU API","relationType":"implements","createdAt":"2025-03-25T20:40:16.889Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"CPU_Package","relationType":"contains","createdAt":"2025-03-25T22:28:35.294Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"Documentation","relationType":"includes","createdAt":"2025-03-25T22:28:35.294Z","version":1}
{"type":"relation","from":"dmetrics-go","to":"Testing","relationType":"uses","createdAt":"2025-03-25T22:28:35.294Z","version":1}
{"type":"relation","from":"CPU_Package","to":"Testing","relationType":"verified by","createdAt":"2025-03-25T22:28:35.294Z","version":1}
{"type":"relation","from":"CPU_Package","to":"Documentation","relationType":"described in","createdAt":"2025-03-25T22:28:35.294Z","version":1}